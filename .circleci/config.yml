version: 2
jobs:
  build:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run: javac -version
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - run: ./gradlew dependencies
      - run: ./gradlew classes
      - run: ./gradlew testClasses

      - persist_to_workspace:
          root: ~/repo
          paths:
            - "**/build/**"
            - "build/*"

      - save_cache:
          paths:
            - ~/.gradle
            - .gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}

  build-dist:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - attach_workspace:
          at: ~/repo

      - run: ./gradlew --build-cache :exec:installDist :exec:assembleDist

      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*/build/*"
            - "build/*"

      - save_cache:
          paths:
            - ~/.gradle
            - .gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}

      #- store_artifacts:
      #    path: ide/build/distributions/

  test:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run:
          name: "Versions"
          command: |
            javac -version
            z3 -version
            echo $(echo "quit" | nuXmv -int | head -n 1)

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - attach_workspace:
          at: ~/repo

      - run: ./gradlew --continue --build-cache check jacocoTestReport

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - save_cache:
          paths:
            - ~/.gradle
            - .gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}


  quality:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - attach_workspace:
          at: ~/repo

      #      - run: ./gradlew --continue --build-cache check jacocoTestReport
      - run: |
          set -o errexit
          ./gradlew --continue --build-cache sonarqube \
             -Dsonar.projectKey=VerifAPS_verifaps-lib\
             -Dsonar.branch.name=${CIRCLE_BRANCH}\
             -Dsonar.organization=verifaps \
             -Dsonar.host.url=https://sonarcloud.io \
             -Dsonar.login=$SONAR_TOKEN
          exit 0

  integration-tests:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run:
          name: "Versions"
          command: |
            javac -version
            z3 -version
            echo $(echo "quit" | nuXmv -int | head -n 1)

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - attach_workspace:
          at: ~/repo

      #- run: ./gradlew --build-cache :ide:installDist :ide:assembleDist
      
      #- store_artifacts:
      #    path: ide/build/distributions/

      - run:
          name: Integration Tests
          command: |
            which nuXmv
            which z3
            share/integration-tests.sh




  ttsynth-test:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run:
          name: "Versions"
          command: |
            python --version
            g++ --version
            javac -version
            z3 -version
            echo $(echo "quit" | nuXmv -int | head -n 1)

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - attach_workspace:
          at: ~/repo

      #- run: ./gradlew --build-cache :ide:installDist

      - run:
          name: Synthesis Tests
          command: |
            cd geteta/examples/synthesis_test_cases
            ../../../exec/build/install/exec/bin/ttsynth --python=/usr/bin/python3 files/* -o generated/
            ./gradlew test --info




  deploy:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo               
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-
      - run: ./gradlew --build-cache :ide:installDist :ide:assembleDist
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(share/gitflow-version.sh)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - build-dist:
          requires:
            - build
      - test:
          requires:
            - build
      - quality:
          requires:
            - test
      - integration-tests:
          requires:
            - build-dist
      - ttsynth-test:
          requires:
            - test
            - build-dist
      - deploy:
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires:
            - test
            - quality
            - integration-tests
            - ttsynth-test
          filters:
            branches:
              only: disabled


<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:message xmlns:ns2="http://formal.iti.kit.edu/exteta-1.0/report/" returncode="counterexample">
    <log>
        <entry time="56" level="debug">read xml file constantprogram.xml</entry> <!-- ignoriert -->
        <entry time="188" level="debug">xml file successfully read</entry> <!-- ignoriert -->
        <entry time="188" level="info">No options in table file.</entry> <!-- ignoriert -->
        <entry time="188" level="info">No functions given in table file.</entry> <!-- ignoriert -->
        <entry time="188" level="debug">3 variables found</entry>
        <entry time="188" level="debug">i : INT</entry>
        <entry time="189" level="debug">o : INT</entry>
        <entry time="189" level="debug">c : INT</entry>
        <entry time="261" level="debug">parsed: - to TRUE</entry>  <!-- ignoriert -->
        <entry time="264" level="debug">parsed: i to (i=o)</entry> <!-- ignoriert -->
        <entry time="267" level="debug">parsed: 42 to (0sd16_42=c)</entry> <!-- ignoriert -->
        <entry time="371" level="debug">Row 1 can reach: {}</entry> <!-- ignoriert -->
        <entry time="435" level="info">Start '[/opt/nuXmv-1.1.1-Linux/bin/nuXmv, -int,
            /home/bal/Downloads/constantprogram/modules.smv]'
        </entry> <!-- ignoriert -->
        <entry time="435" level="info">wd: constantprogram</entry> <!-- ignoriert -->
        <entry time="435" level="info">Result in constantprogram/log_12.txt</entry> <!-- ignoriert -->
    </log>
    <ns2:counterexample>
        <step row="-1"> <!-- Initiale Belegung fÃ¼r o und c -->
            <state name="table.clock1" value="0ud4_0"/> <!-- ignoriert -->
            <state name="table.s1" value="TRUE"/> <!-- ignoriert -->
            <state name="table.ERROR" value="FALSE"/> <!-- ignoriert -->
            <state name="code.c" value="0sd16_0"/>
            <state name="code.o" value="0sd16_0"/>
            <state name="table.s1_in" value="TRUE"/> <!-- ignoriert -->
            <state name="table.clock1_limit" value="FALSE"/> <!-- ignoriert -->
            <state name="table.s1_out" value="FALSE"/> <!-- ignoriert -->
            <state name="table.s1_keep" value="FALSE"/> <!-- ignoriert -->
            <state name="table.clock1_tic" value="FALSE"/> <!-- ignoriert -->
            <state name="table.clock1_rs" value="TRUE"/> <!-- ignoriert -->
            <state name="table.s1_fwd" value="FALSE"/> <!-- ignoriert -->
        </step>
        <step row="0"> <!-- Input i in erster Tabellenzeile, erster Zyklus -->
            <input name="i" value="0sd16_0"/>
        </step>
        <step row="0"> <!-- Erste Tabellenzeile, erster Zyklus, i und o bleiben wie oben, c bekommt neuen Wert -->
            <state name="table.s1" value="FALSE"/> <!-- ignoriert -->
            <state name="table.ERROR" value="TRUE"/> <!-- ignoriert -->
            <state name="code.c" value="0sd16_43"/>
        </step>
    </ns2:counterexample>
</ns2:message>
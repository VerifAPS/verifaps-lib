plugins {}

apply plugin: 'antlr'

description = 'iec61131lang'

repositories {
}

dependencies {
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.13.2'
    antlr group: 'org.antlr', name: 'antlr4', version: '4.13.2'

    api project(':util')
    api project(':xml')

    api 'com.github.ajalt.clikt:clikt:5.0.2'

    testImplementation 'org.mdkt.compiler:InMemoryJavaCompiler:1.3.0'
    implementation group: 'com.squareup', name: 'javapoet', version: '1.13.0'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages", "-package", "edu.kit.iti.formal.automation.parser"]
    outputDirectory file("${project.buildDir}/generated-src/antlr/main/edu/kit/iti/formal/automation/parser")
}

/*task generateILGrammar(type: AntlrTask) {
        maxHeapSize = "64m"
        arguments += ["-visitor", "-long-messages", "-package", "edu.kit.iti.formal.automation.parser"]
        outputDirectory file("${project.buildDir}/generated-src/antlr/main/edu/kit/iti/formal/automation/parser")
}
*/

compileJava.dependsOn << generateGrammarSource
compileKotlin.dependsOn << generateGrammarSource
compileTestKotlin.dependsOn generateTestGrammarSource

test {
    exclude '**/SFCLangParserTest.class'
}
